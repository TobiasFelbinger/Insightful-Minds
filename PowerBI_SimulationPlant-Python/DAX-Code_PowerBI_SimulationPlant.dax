#######################################################
# DAX CODE
#######################################################

#######################################################
# Calculating the percentage of each machine state
#######################################################

# Downtime percentage
Downtime in % = 
VAR Count_Downtime =
    CALCULATE(
        COUNTROWS('df_mde'),
        'df_mde'[Downtime] = 1
    )
VAR Count_Rows = COUNTROWS('df_mde')
RETURN
    DIVIDE(Count_Downtime, Count_Rows) * 100

# Error percentage
Error in % = 
VAR Count_Error =
    CALCULATE(
        COUNTROWS('df_mde'),
        'df_mde'[Error] = 1
    )
VAR Count_Rows = COUNTROWS('df_mde')
RETURN
    DIVIDE(Count_Error, Count_Rows) * 100

# Production percentage
Production in % = 
VAR Count_Production =
    CALCULATE(
        COUNTROWS('df_mde'),
        'df_mde'[Production] = 1
    )
VAR Count_Rows = COUNTROWS('df_mde')
RETURN
    DIVIDE(Count_Production, Count_Rows) * 100

#######################################################
# Calculating machine state percentage for daily analysis (Page Details)
#######################################################

# Downtime percentage per day
Downtime in % day = 
IF(
    HASONEVALUE('df_mde'[Date]),
    VAR Count_Downtime =
        CALCULATE(
            COUNTROWS('df_mde'),
            'df_mde'[Downtime] = 1
        )
    VAR Count_Rows = COUNTROWS('df_mde')
    RETURN DIVIDE(Count_Downtime, Count_Rows) * 100,
    BLANK()
)

# Error percentage per day
Error in % day = 
IF(
    HASONEVALUE('df_mde'[Date]),
    VAR Count_Values =
        CALCULATE(
            COUNTROWS('df_mde'),
            'df_mde'[Error] = 1
        )
    VAR Count_Rows = COUNTROWS('df_mde')
    RETURN DIVIDE(Count_Values, Count_Rows) * 100,
    BLANK()
)

# Production percentage per day
Production in % day = 
IF(
    HASONEVALUE('df_mde'[Date]),
    VAR Count_Values =
        CALCULATE(
            COUNTROWS('df_mde'),
            'df_mde'[Production] = 1
        )
    VAR Count_Rows = COUNTROWS('df_mde')
    RETURN DIVIDE(Count_Values, Count_Rows) * 100,
    BLANK()
)

#######################################################
# Counter calculations
#######################################################

# Cumulative sum of produced amounts up to the selected time
Counter_Adding = 
IF(
    HASONEVALUE('df_mde'[Date]),
    CALCULATE(
        SUM('df_mde'[Counter]),
        FILTER(
            ALLSELECTED('df_mde'),
            'df_mde'[Date] < MAX('df_mde'[Date]) || 
            ('df_mde'[Date] = MAX('df_mde'[Date]) && 'df_mde'[Time] <= MAX('df_mde'[Time]))
        )
    ), 
    BLANK()
)

#######################################################
# Key Performance Indicators (KPI)
#######################################################

# Mean Time Between Failures (MTBF)
MTBF = 
VAR Count_Error =
    CALCULATE(
        COUNTROWS('df_mde'),
        'df_mde'[Error_Transition] = 1
    )
VAR OperatingTime = COUNTROWS('df_mde')  -- Total dataset duration in minutes
RETURN
    DIVIDE(OperatingTime, Count_Error, 0)

# Mean Time To Repair (MTTR)
MTTR = 
VAR Count_Error =
    CALCULATE(
        COUNTROWS('df_mde'),
        'df_mde'[Error_Transition] = 1
    )
VAR Sum_TimeError =
    CALCULATE(
        COUNTROWS('df_mde'),
        'df_mde'[Error] = 1
    )
RETURN
    DIVIDE(Sum_TimeError, Count_Error, 0)

#######################################################
# Additional Features
#######################################################

# Display the selected date range
Selected Date = 
VAR MinDatum = MIN('df_mde'[Date])
VAR MaxDatum = MAX('df_mde'[Date])
RETURN
    SWITCH(
        TRUE(),
        MinDatum = MaxDatum, "Date: " & FORMAT(MinDatum, "dd.MM.yyyy"), 
        "Date: " & FORMAT(MinDatum, "dd.MM.yyyy") & " - " & FORMAT(MaxDatum, "dd.MM.yyyy")
    )

# Classify days as Weekday or Weekend
WeekdayFilter = 
IF(
    WEEKDAY('df_mde'[Date], 2) <= 5,  -- 2 means Monday = 1, Tuesday = 2, ..., Sunday = 7
    "Weekday",
    "Weekend"
)

# Display the selected machine(s)
Current_Machine = 
VAR CountMachine = COUNTROWS(VALUES('df_mde'[Machine]))
RETURN
    SWITCH(
        TRUE(),
        CountMachine = 0,  "",
        CountMachine = 1,  SELECTEDVALUE('df_mde'[Machine]),
        "Multiple machines"
    )
